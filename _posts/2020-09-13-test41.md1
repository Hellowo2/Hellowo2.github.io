---
layout: post
title: '顺序栈实现进制转换'
date: 2020-09-13
author: lalalla
cover: 'http://on2171g4d.bkt.clouddn.com/jekyll-banner.png'
tags: c语言 数据结构 顺序存储 栈
---
```c
#include<stdio.h>
#include<stdlib.h>
typedef int ElemType;
#define initsize 100
typedef struct hhh
{
    ElemType *data;
    int top;
    int listsize;
}linkstack;

//初始化函数
int initlist(linkstack *L)
{
    L->data=(ElemType *)malloc(initsize*sizeof(ElemType));
    if(!L->data)
    {
        printf("error");
        return 0;
    }
    L->top=0;
    L->listsize=initsize;
    return 0;
}

//入栈函数
int push(linkstack *L,ElemType *e)
{
    if(L->top==L->listsize)
    {
        printf("满栈，需增加空间\n");
        realloc(L->data,(L->top)*sizeof(ElemType));
        if(!L->data)
        return 0;
        L->listsize++;
    }
    L->data[L->top++]=*e;
    return 0;
}

//输出函数
int list(linkstack *L)
{
    int i;
    printf("输出数据为:\n");
    for(i=L->top-1;i>=0;i--)
    {
        printf("%d\t",L->data[i]);
    }
    return 0;
}

//主函数
int main()
{
    linkstack L;
    int x,n;
    int m;
    char t='Y';
    while(t=='Y' || t=='y')
    {
        system("cls");
        initlist(&L);
        printf("请输入一个非负的十进制数\n");
        scanf("%d",&x);
        if(x<0)
        {
            printf("输入错误,请重新输入\n");
            system("pause");
            return 0;
        }
        printf("请输入要转换的进制数(2-9)\n");
        scanf("%d",&n);
        if(n<2 && n>9)
        {
            printf("输入错误,请重新输入\n");
            system("pause");
            return 0;
        }
        do
        {
            m=x%n;
            push(&L,&m);
            x=x/n;
        } while(x!=0);
        list(&L);
        free(L.data);
        printf("\n");
        printf("是否继续,Y,y/N,n\n");
        fflush(stdin);
        scanf("%c",&t);
    }
    system("pause");    
    return 0;    
}
```
