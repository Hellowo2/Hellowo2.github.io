---
layout: post
title: '排序操作'
date: 2020-09-13
author: lalalla
cover: 'http://on2171g4d.bkt.clouddn.com/jekyll-banner.png'
tags: c语言 数据结构 排序
---
```c
#include<stdio.h>
#include<stdlib.h>
//直接插入排序
int insersort(int k[],int n)
{
    int i,j,temp;
    for(i=1;i<n;i++)
    {
        if(k[i]<k[i-1])
        {
            temp=k[i];
            for(j=i-1;k[j]>temp && j>=0;j--)
            {
                k[j+1]=k[j];
            }
            k[j+1]=temp;
        }
    }
    for(i=0;i<n;i++)
    printf("%d\t",k[i]);
    system("\npause");
}

//希尔排序
int shellinsort(int k[],int t)
{
    int i,j,temp;
    int n=5; //增量
    do
    {
        n--;
        for(i=n;i<t;i++)
        {
            if(k[i]<k[i-n])
            {
                temp=k[i];
                for(j=i-n;k[j]>temp && j>=0;j-=n)
                {
                    k[j+n]=k[j];
                }
                k[j+n]=temp;
            }
        }
    }while(n>1);    
    for(i=0;i<t;i++)
    printf("%d\t",k[i]);
    system("\npause");
}

//冒泡排序
int Bubblesort(int a[],int n)
{
    int i,j,m=1;
    for(i=0;m&&i<n-1;i++)
    {
        for(j=0,m=0;j<n-1-i;j++)
        {
            if(a[j]>a[j+1])
            {
                int t;
                t=a[j];
                a[j]=a[j+1];
                a[j+1]=t;
                m=1;
            }    
        }
    }
    for(i=0;i<n;i++)
    printf("%d\t",a[i]);
    system("\npause");
}

//快速排序
void Hoaresort(int k[],int low,int high)
{
    int i,j,temp;
    if(low<high)
    {
        i=low;j=high;
        temp=k[i];
        while(i<j)
        {
            while(i<j&&k[j]>=temp)
            j--;
            k[i]=k[j];
            while(i<j&&k[i]<temp)
            i++;
            k[j]=k[i];
            Hoaresort(k,low,i-1);
            Hoaresort(k,i+1,high);
        }
    }
}

//简单选择排序
int selectsort(int a[],int n)
{
    int i,j,k;
    for(i=0;i<n-1;i++)
    {
        k=i;
        for(j=i+1;j<n;j++)
        {
            if(a[j]<a[k])
            k=j;
        }
        if(k!=i)
        {
            int t;
            t=a[i];
            a[i]=a[k];
            a[k]=t;
        }
    }
    for(i=0;i<n;i++)
    printf("%d\t",a[i]);
    system("\npause");
}

int menu()
{
    int i;
    printf("输入1进行直接插入排序\n");
    printf("输入2进行希尔排序\n");
    printf("输入3进行冒泡排序\n");
    printf("输入4进行快速排序\n");
    printf("输入5进行简单选择排序\n\n");
    printf("请输入你的选择(1到5)\n");
    scanf("%d",&i);
    return i;
}

//输出函数
int show(int a[],int n)
{
    int i;
    printf("数组数据为\n");
    for(i=0;i<n;i++)
    printf("%d\t",a[i]);
    printf("\n排序后为\n");
}

//对数组数更新
int hh(int a[])
{
    a[0]=12;
    a[1]=45;
    a[2]=21;
    a[3]=12;
    a[4]=30;
    a[5]=2;
    a[6]=68;
    a[7]=33;
}
int main()
{
    int i;
    int a[8]={12,45,21,12,30,2,68,33};
    int n=8;
    for(;;)
    {
        system("cls");
        switch(menu())
        {
            case 1:
            hh(a);  //数组重新赋值
            show(a,n);  //输出排序前数组数据
            insersort(a,n);continue;
            case 2:
            hh(a);
            show(a,n);
            shellinsort(a,n);continue;
            case 3:
            hh(a);
            show(a,n);
            Bubblesort(a,n);continue;
            case 4:
            hh(a);
            show(a,n);
            Hoaresort(a,0,7);
            for(i=0;i<n;i++)
            printf("%d\t",a[i]);
            system("\npause");continue;
            case 5:
            hh(a);
            show(a,n);
            selectsort(a,n);continue;
            default:
            printf("输入错误，请重新输入");
        }
    }
}
```
