---
layout: post
title: '顺序表实现奇数在前偶数在后'
date: 2020-09-12
author: lalalla
cover: 'http://on2171g4d.bkt.clouddn.com/jekyll-banner.png'
tags: c语言 数据结构 顺序存储
---
```c
#include<stdio.h>
#include<stdlib.h>
typedef int ElemType;
#define INITSIZE 100
typedef struct 
{
    ElemType *date;
    int length;
    int listsize;
}sqlist;

int initlist(sqlist *s)
{
    ElemType x;
    s->date=(ElemType *)malloc(INITSIZE*sizeof(ElemType));
    if(!s->date)
    {
        printf("error");
        exit(1);
    }
    s->length=0;
    s->listsize=INITSIZE;
}

int create(sqlist *s)
{
    ElemType x;
    scanf("%d",&x);
    for(;x!=9999;)
    {
        if(s->length==s->listsize)
        {
            s->date=(ElemType *)realloc(s->date,(s->listsize+1)*sizeof(ElemType));
            if(!s->date)
            {
                printf("error");
                exit(1);
            }
            s->listsize++;
        }
        s->date[s->length]=x;
        s->length++;
        scanf("%d",&x);
    }
}

int move(sqlist *s)
{
    ElemType t;
    int i=0,j=s->length-1;
    while(i<j)
    {
        while(i<j&&(s->date[i]%2)!=0)
        {
        i++;
        }
        while(i<j&&(s->date[j]%2)==0)
        {
        j--;
        }
        if(i<j)
        {
            t=s->date[i];
            s->date[i]=s->date[j];
            s->date[j]=t;
        }
    }
}


int output(sqlist *s)
{
    int i=0;
    for(i;i<s->length;i++)
    {
        printf("%d\t",s->date[i]);
    }
    printf("\n");
}    
    
int main()
{
    sqlist L1;
    initlist(&L1);
    printf("请输入L1表的数据\n");
    create(&L1);
    printf("算法前L1表的数据有:\n");
    output(&L1);
    move(&L1);
    printf("算法后L1的数据为:\n");
    output(&L1);
    system("pause");

}
```
